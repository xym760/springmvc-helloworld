<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置自动扫描的包-->
    <context:component-scan base-package="com.nxist.springmvc"></context:component-scan>

    <!--配置视图解析器：如何把handler方法返回值解析为实际的物理视图-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--配置视图解析器BeanNameViewResolver：使用视图的名字来解析视图-->
    <!--通过order属性来定义视图解析器的优先级，order值越小优先级越高-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="100"></property>
    </bean>

    <!--配置国际化资源文件-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"></property>
    </bean>

    <!--配置直接转发的页面-->
    <!--可以直接响应转发的页面，而无需再经过Handler的方法-->
    <mvc:view-controller path="/success" view-name="success"></mvc:view-controller>

    <!--在实际开发中通常都需要配置mvc:annotation-driven标签-->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--
    <mvc:default-servlet-handler/> 将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler，
    它会对进入 DispatcherServlet 的请求进行筛查，如果发现是没有经过映射的请求，
    就将该请求交由 WEB 应用服务器默认的 Servlet 处理，如果不是静态资源的请求，才由 DispatcherServlet继续处理。
    一般 WEB 应用服务器默认的 Servlet 的名称都是 default。
    若所使用的 WEB 服务器的默认 Servlet 名称不是 default，则需要通过 default-servlet-name 属性显式指定。
    -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>
</beans>